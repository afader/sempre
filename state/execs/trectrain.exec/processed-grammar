(rule $Noun ($LEMMA_TOKEN) (FilterPosTagFn token WRB WP NN NNS NNP NNPS))
(rule $SimpleNounPhrase ($Noun) (ConcatFn " "))
(rule $SimpleNounPhrase ($Noun $SimpleNounPhrase) (ConcatFn " "))
(rule $NamedEntity ($PHRASE) (FilterNerSpanFn PERSON ORGANIZATION LOCATION MISC))
(rule $NamedEntity ($PHRASE) (FilterPosTagFn span NNP))
(rule $TokenSpan ($PHRASE) (FilterSpanLengthFn 2))
(rule $Verb ($LEMMA_TOKEN) (FilterPosTagFn token VB VBD VBN VBG VBP VBZ VBD-AUX))
(rule $Particle ($LEMMA_TOKEN) (FilterPosTagFn token RP))
(rule $Prep ($LEMMA_TOKEN) (FilterPosTagFn token IN TO))
(rule $Adj ($LEMMA_TOKEN) (FilterPosTagFn token JJ))
(rule $Rel ($LEMMA_TOKEN) (FilterPosTagFn token NN NNS NNP NNPS VB VBD VBN VBG VBP VBZ IN VBD-AUX JJ))
(rule $BaseRel ($Rel) (IdentityFn))
(rule $BaseRel ($Verb $SimpleNounPhrase) (ConcatFn " "))
(rule $BaseRel ($Verb $Particle) (ConcatFn " "))
(rule $CompositeRel ($BaseRel) (ConcatFn " "))
(rule $CompositeRel ($BaseRel $Prep) (ConcatFn " "))
(rule $Entity ($NamedEntity) (LexiconFn entity))
(rule $Entity ($TokenSpan) (LexiconFn entity allowInexact))
(rule $Entity ($PHRASE) (DateFn))
(rule $Unary ($SimpleNounPhrase) (LexiconFn unary))
(rule $Intermediate1 (how $Adj) (SelectFn 0))
(rule $Unary ($Intermediate1) (ConstantFn (fb:type.object.type fb:type.int) fb:type.int))
(rule $Intermediate2 (how $Adj) (SelectFn 0))
(rule $Unary ($Intermediate2) (ConstantFn (fb:type.object.type fb:type.float) fb:type.float))
(rule $Binary ($CompositeRel) (LexiconFn binary))
(rule $Unary (who) (ConstantFn (fb:type.object.type fb:people.person) fb:people.person))
(rule $Unary (who) (ConstantFn (fb:type.object.type fb:organization.organization) fb:organization.organization))
(rule $Unary (who) (ConstantFn (fb:type.object.type fb:business.company) fb:business.company))
(rule $Unary (who) (ConstantFn (fb:type.object.type fb:common.topic) fb:common.topic))
(rule $Unary (what) (ConstantFn (fb:type.object.type fb:common.topic) fb:common.topic))
(rule $Unary (where) (ConstantFn (fb:type.object.type fb:organization.organization) fb:organization.organization))
(rule $Unary (where) (ConstantFn (fb:type.object.type fb:location.location) fb:location.location))
(rule $Unary (where) (ConstantFn (fb:type.object.type fb:education.educational_institution) fb:education.educational_institution))
(rule $Unary (when) (ConstantFn (fb:type.object.type fb:type.datetime) fb:type.datetime))
(rule $Unary (date) (ConstantFn (fb:type.object.type fb:type.datetime) fb:type.datetime))
(rule $Unary (year) (ConstantFn (fb:type.object.type fb:type.datetime) fb:type.datetime))
(rule $Unary (day) (ConstantFn (fb:type.object.type fb:type.datetime) fb:type.datetime))
(rule $Binary (,) (ConstantFn fb:location.location.containedby (-> fb:location.location fb:location.location)))
(rule $Intermediate3 (how many) (ConstantFn null))
(rule $CountStr ($Intermediate3) (ConstantFn null null))
(rule $Intermediate4 (number of) (ConstantFn null))
(rule $CountStr ($Intermediate4) (ConstantFn null null))
(rule $Operator ($CountStr) (ConstantFn (lambda x (count (var x))) (-> fb:common.topic fb:type.number)))
(rule $Padding ($PHRASE) (IdentityFn))
(rule $Intermediate5 ($Operator) (SelectFn 0))
(rule $Intermediate5 ($Padding $Operator) (SelectFn 1))
(rule $Intermediate6 ($Intermediate5) (SelectFn 0))
(rule $Intermediate6 ($Intermediate5 $Padding) (SelectFn 0))
(rule $ROOT ($Intermediate6 $Set) (JoinFn forward betaReduce))
(rule $Intermediate7 ($Set) (SelectFn 0))
(rule $Intermediate7 ($Padding $Set) (SelectFn 1))
(rule $Intermediate8 ($Intermediate7) (SelectFn 0))
(rule $Intermediate8 ($Intermediate7 $Padding) (SelectFn 0))
(rule $ROOT ($Intermediate8) (IdentityFn))
(rule $Intermediate9 ($Unary) (SelectFn 0))
(rule $Intermediate9 ($Unary $Padding) (SelectFn 0))
(rule $BaseSet ($Intermediate9 $Entity) (BridgeFn unary headFirst))
(rule $Intermediate10 ($Entity) (SelectFn 0))
(rule $Intermediate10 ($Entity $Padding) (SelectFn 0))
(rule $BaseSet ($Intermediate10 $Unary) (BridgeFn unary headLast))
(rule $BaseSet ($Entity) (BridgeFn entity headLast))
(rule $Intermediate11 ($BaseSet) (SelectFn 0))
(rule $Intermediate11 ($BaseSet $Padding) (SelectFn 0))
(rule $BaseSet ($Intermediate11 $Entity) (BridgeFn inject headFirst))
(rule $Intermediate12 ($Entity) (SelectFn 0))
(rule $Intermediate12 ($Entity $Padding) (SelectFn 0))
(rule $BaseSet ($Intermediate12 $BaseSet) (BridgeFn inject headLast))
(rule $Set ($BaseSet) (IdentityFn))
(rule $Intermediate13 ($Unary) (SelectFn 0))
(rule $Intermediate13 ($Unary $Padding) (SelectFn 0))
(rule $Set ($Intermediate13 $BaseSet) (MergeFn and))
